
Midterm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ca  00800100  00000996  00000a2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000996  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000102  008001ca  008001ca  00000af4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000af4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b50  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ba0  00000000  00000000  00000bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000779  00000000  00000000  00001778  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000418  00000000  00000000  00001ef1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d8  00000000  00000000  0000230c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000446  00000000  00000000  000023e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000457  00000000  00000000  0000282a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002c81  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e9       	ldi	r30, 0x96	; 150
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 3c       	cpi	r26, 0xCA	; 202
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	aa ec       	ldi	r26, 0xCA	; 202
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 3c       	cpi	r26, 0xCC	; 204
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 af 00 	call	0x15e	; 0x15e <main>
  9e:	0c 94 c9 04 	jmp	0x992	; 0x992 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_initializer>:
}

void adc_initializer(void) 												//initialize ADC
{
	
	ADMUX = (0<<REFS1)| (1<<REFS0)|(0<<ADLAR)| 							// Reference Selection Bits
  a6:	82 e4       	ldi	r24, 0x42	; 66
  a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(0<<MUX2)| (1<<MUX1)| (0<<MUX0);									// avcc - external cap at AREF
																		// ADC Left Adjust Result
																		// Analog Channel Selection Bits
																		// PC2 where we read from

	ADCSRA = (1<<ADEN)| (0<<ADSC)| (0<<ADATE)| (0<<ADIF)|				// ADC ENable
  ac:	85 e8       	ldi	r24, 0x85	; 133
  ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
																		// ADC Interrupt Enable
																		// ADC Prescaler Select Bits
																		// ADC Prescaler select bits
																		// ADC input
																		// Timer/Counter1 Interrupt Mask Register
	TIMSK1 |= (1<<TOIE1); 												// enable overflow interrupt
  b2:	ef e6       	ldi	r30, 0x6F	; 111
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	81 60       	ori	r24, 0x01	; 1
  ba:	80 83       	st	Z, r24
	TCCR1B |= (1<<CS12)|(1<<CS10); 										// clock
  bc:	e1 e8       	ldi	r30, 0x81	; 129
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	85 60       	ori	r24, 0x05	; 5
  c4:	80 83       	st	Z, r24
	TCNT1 = 49911; 														//((16MHz/1024)*1)-1 = 15624
  c6:	87 ef       	ldi	r24, 0xF7	; 247
  c8:	92 ec       	ldi	r25, 0xC2	; 194
  ca:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  ce:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  d2:	08 95       	ret

000000d4 <read_adc>:
}

void read_adc(void)														// initialize to begin to read from the sensor
{
	unsigned char i =4;													// to keep track of input
	room_temp = 0;
  d4:	10 92 cb 02 	sts	0x02CB, r1	; 0x8002cb <room_temp+0x1>
  d8:	10 92 ca 02 	sts	0x02CA, r1	; 0x8002ca <room_temp>
  dc:	24 e0       	ldi	r18, 0x04	; 4
	while (i--) {
		ADCSRA |= (1<<ADSC);										    // used to start convo with chips
  de:	ea e7       	ldi	r30, 0x7A	; 122
  e0:	f0 e0       	ldi	r31, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		room_temp+= ADC;
  e2:	a8 e7       	ldi	r26, 0x78	; 120
  e4:	b0 e0       	ldi	r27, 0x00	; 0
void read_adc(void)														// initialize to begin to read from the sensor
{
	unsigned char i =4;													// to keep track of input
	room_temp = 0;
	while (i--) {
		ADCSRA |= (1<<ADSC);										    // used to start convo with chips
  e6:	80 81       	ld	r24, Z
  e8:	80 64       	ori	r24, 0x40	; 64
  ea:	80 83       	st	Z, r24
		while(ADCSRA & (1<<ADSC));
  ec:	80 81       	ld	r24, Z
  ee:	86 fd       	sbrc	r24, 6
  f0:	fd cf       	rjmp	.-6      	; 0xec <read_adc+0x18>
		room_temp+= ADC;
  f2:	4d 91       	ld	r20, X+
  f4:	5c 91       	ld	r21, X
  f6:	11 97       	sbiw	r26, 0x01	; 1
  f8:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <room_temp>
  fc:	90 91 cb 02 	lds	r25, 0x02CB	; 0x8002cb <room_temp+0x1>
 100:	84 0f       	add	r24, r20
 102:	95 1f       	adc	r25, r21
 104:	90 93 cb 02 	sts	0x02CB, r25	; 0x8002cb <room_temp+0x1>
 108:	80 93 ca 02 	sts	0x02CA, r24	; 0x8002ca <room_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10c:	3f ef       	ldi	r19, 0xFF	; 255
 10e:	80 e7       	ldi	r24, 0x70	; 112
 110:	92 e0       	ldi	r25, 0x02	; 2
 112:	31 50       	subi	r19, 0x01	; 1
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	90 40       	sbci	r25, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <read_adc+0x3e>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <read_adc+0x48>
 11c:	00 00       	nop
 11e:	21 50       	subi	r18, 0x01	; 1

void read_adc(void)														// initialize to begin to read from the sensor
{
	unsigned char i =4;													// to keep track of input
	room_temp = 0;
	while (i--) {
 120:	11 f7       	brne	.-60     	; 0xe6 <read_adc+0x12>
		ADCSRA |= (1<<ADSC);										    // used to start convo with chips
		while(ADCSRA & (1<<ADSC));
		room_temp+= ADC;
		_delay_ms(50);
	}
	room_temp = room_temp / 8; 											// gets correct value displayed
 122:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <room_temp>
 126:	90 91 cb 02 	lds	r25, 0x02CB	; 0x8002cb <room_temp+0x1>
 12a:	96 95       	lsr	r25
 12c:	87 95       	ror	r24
 12e:	96 95       	lsr	r25
 130:	87 95       	ror	r24
 132:	96 95       	lsr	r25
 134:	87 95       	ror	r24
 136:	90 93 cb 02 	sts	0x02CB, r25	; 0x8002cb <room_temp+0x1>
 13a:	80 93 ca 02 	sts	0x02CA, r24	; 0x8002ca <room_temp>
 13e:	08 95       	ret

00000140 <USART_init>:
}

/* INIT USART (RS-232) */
void USART_init( unsigned int ubrr ) {
	UBRR0H = (unsigned char)(ubrr>>8);
 140:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
 144:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0)| ( 1 << RXCIE0); 				// Enable receiver, transmitter & RX interrupt
 148:	e1 ec       	ldi	r30, 0xC1	; 193
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	88 69       	ori	r24, 0x98	; 152
 150:	80 83       	st	Z, r24
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
 152:	e2 ec       	ldi	r30, 0xC2	; 194
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	86 60       	ori	r24, 0x06	; 6
 15a:	80 83       	st	Z, r24
 15c:	08 95       	ret

0000015e <main>:
char outs[256];															// room we have to print


int main(void) {

	adc_initializer();													// Initialize the ADC (Analog / Digital Converter)
 15e:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_initializer>
	USART_init(MYUBRR); 												// Initialize the USART (RS232 interface)
 162:	87 e6       	ldi	r24, 0x67	; 103
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	0e 94 a0 00 	call	0x140	; 0x140 <USART_init>
 16a:	2f ef       	ldi	r18, 0xFF	; 255
 16c:	89 e6       	ldi	r24, 0x69	; 105
 16e:	98 e1       	ldi	r25, 0x18	; 24
 170:	21 50       	subi	r18, 0x01	; 1
 172:	80 40       	sbci	r24, 0x00	; 0
 174:	90 40       	sbci	r25, 0x00	; 0
 176:	e1 f7       	brne	.-8      	; 0x170 <main+0x12>
 178:	00 c0       	rjmp	.+0      	; 0x17a <main+0x1c>
 17a:	00 00       	nop
	_delay_ms(500); 													// wait a bit
	sei(); 																// global interrupt
 17c:	78 94       	sei
 17e:	ff cf       	rjmp	.-2      	; 0x17e <main+0x20>

00000180 <USART_tx_string>:
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0)| ( 1 << RXCIE0); 				// Enable receiver, transmitter & RX interrupt
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
}

void USART_tx_string( char *data ) 										// used to print on to the screen
{
 180:	cf 93       	push	r28
 182:	df 93       	push	r29
	while ((*data != '\0')) {
 184:	fc 01       	movw	r30, r24
 186:	20 81       	ld	r18, Z
 188:	22 23       	and	r18, r18
 18a:	69 f0       	breq	.+26     	; 0x1a6 <USART_tx_string+0x26>
 18c:	dc 01       	movw	r26, r24
 18e:	11 96       	adiw	r26, 0x01	; 1
		while (!(UCSR0A & (1 <<UDRE0)));
 190:	e0 ec       	ldi	r30, 0xC0	; 192
 192:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
 194:	c6 ec       	ldi	r28, 0xC6	; 198
 196:	d0 e0       	ldi	r29, 0x00	; 0
}

void USART_tx_string( char *data ) 										// used to print on to the screen
{
	while ((*data != '\0')) {
		while (!(UCSR0A & (1 <<UDRE0)));
 198:	90 81       	ld	r25, Z
 19a:	95 ff       	sbrs	r25, 5
 19c:	fd cf       	rjmp	.-6      	; 0x198 <USART_tx_string+0x18>
		UDR0 = *data;
 19e:	28 83       	st	Y, r18
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
}

void USART_tx_string( char *data ) 										// used to print on to the screen
{
	while ((*data != '\0')) {
 1a0:	2d 91       	ld	r18, X+
 1a2:	21 11       	cpse	r18, r1
 1a4:	f9 cf       	rjmp	.-14     	; 0x198 <USART_tx_string+0x18>
		while (!(UCSR0A & (1 <<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
 1a6:	df 91       	pop	r29
 1a8:	cf 91       	pop	r28
 1aa:	08 95       	ret

000001ac <__vector_13>:

ISR(TIMER1_OVF_vect) 														//timer overflow interrupt to delay for 1 second
{
 1ac:	1f 92       	push	r1
 1ae:	0f 92       	push	r0
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	0f 92       	push	r0
 1b4:	11 24       	eor	r1, r1
 1b6:	2f 93       	push	r18
 1b8:	3f 93       	push	r19
 1ba:	4f 93       	push	r20
 1bc:	5f 93       	push	r21
 1be:	6f 93       	push	r22
 1c0:	7f 93       	push	r23
 1c2:	8f 93       	push	r24
 1c4:	9f 93       	push	r25
 1c6:	af 93       	push	r26
 1c8:	bf 93       	push	r27
 1ca:	ef 93       	push	r30
 1cc:	ff 93       	push	r31
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	cd b7       	in	r28, 0x3d	; 61
 1d4:	de b7       	in	r29, 0x3e	; 62
 1d6:	ce 57       	subi	r28, 0x7E	; 126
 1d8:	d1 09       	sbc	r29, r1
 1da:	de bf       	out	0x3e, r29	; 62
 1dc:	cd bf       	out	0x3d, r28	; 61
	unsigned char AT_CHECK[] = "AT\r\n"; 									//AT Commands
 1de:	85 e0       	ldi	r24, 0x05	; 5
 1e0:	ec e4       	ldi	r30, 0x4C	; 76
 1e2:	f1 e0       	ldi	r31, 0x01	; 1
 1e4:	de 01       	movw	r26, r28
 1e6:	11 96       	adiw	r26, 0x01	; 1
 1e8:	01 90       	ld	r0, Z+
 1ea:	0d 92       	st	X+, r0
 1ec:	8a 95       	dec	r24
 1ee:	e1 f7       	brne	.-8      	; 0x1e8 <__vector_13+0x3c>
	unsigned char CWMODE_SET[] = "AT+CWMODE=1\r\n"; 						//Set MODE
 1f0:	8e e0       	ldi	r24, 0x0E	; 14
 1f2:	e1 e5       	ldi	r30, 0x51	; 81
 1f4:	f1 e0       	ldi	r31, 0x01	; 1
 1f6:	de 01       	movw	r26, r28
 1f8:	16 96       	adiw	r26, 0x06	; 6
 1fa:	01 90       	ld	r0, Z+
 1fc:	0d 92       	st	X+, r0
 1fe:	8a 95       	dec	r24
 200:	e1 f7       	brne	.-8      	; 0x1fa <__vector_13+0x4e>
	unsigned char CWJAP_LOGIN[] = "AT+CWJAP=\"MY_WIFI\",\"12345678\"\r\n"; 	//MUST CHANGE WIFI AND PASSWORD
 202:	80 e2       	ldi	r24, 0x20	; 32
 204:	ef e5       	ldi	r30, 0x5F	; 95
 206:	f1 e0       	ldi	r31, 0x01	; 1
 208:	de 01       	movw	r26, r28
 20a:	54 96       	adiw	r26, 0x14	; 20
 20c:	01 90       	ld	r0, Z+
 20e:	0d 92       	st	X+, r0
 210:	8a 95       	dec	r24
 212:	e1 f7       	brne	.-8      	; 0x20c <__vector_13+0x60>
	unsigned char CIPMUX_SET[] = "AT+CIPMUX=0\r\n";
 214:	8e e0       	ldi	r24, 0x0E	; 14
 216:	ef e7       	ldi	r30, 0x7F	; 127
 218:	f1 e0       	ldi	r31, 0x01	; 1
 21a:	de 01       	movw	r26, r28
 21c:	d4 96       	adiw	r26, 0x34	; 52
 21e:	01 90       	ld	r0, Z+
 220:	0d 92       	st	X+, r0
 222:	8a 95       	dec	r24
 224:	e1 f7       	brne	.-8      	; 0x21e <__vector_13+0x72>
	unsigned char CIPSTART_SEND[] = "AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n";
 226:	8c e2       	ldi	r24, 0x2C	; 44
 228:	ed e8       	ldi	r30, 0x8D	; 141
 22a:	f1 e0       	ldi	r31, 0x01	; 1
 22c:	de 01       	movw	r26, r28
 22e:	ae 5b       	subi	r26, 0xBE	; 190
 230:	bf 4f       	sbci	r27, 0xFF	; 255
 232:	01 90       	ld	r0, Z+
 234:	0d 92       	st	X+, r0
 236:	8a 95       	dec	r24
 238:	e1 f7       	brne	.-8      	; 0x232 <__vector_13+0x86>
	unsigned char CIPSEND_FINISH[] = "AT+CIPSEND=100\r\n";
 23a:	81 e1       	ldi	r24, 0x11	; 17
 23c:	e9 eb       	ldi	r30, 0xB9	; 185
 23e:	f1 e0       	ldi	r31, 0x01	; 1
 240:	de 01       	movw	r26, r28
 242:	a2 59       	subi	r26, 0x92	; 146
 244:	bf 4f       	sbci	r27, 0xFF	; 255
 246:	01 90       	ld	r0, Z+
 248:	0d 92       	st	X+, r0
 24a:	8a 95       	dec	r24
 24c:	e1 f7       	brne	.-8      	; 0x246 <__vector_13+0x9a>
 24e:	2f ef       	ldi	r18, 0xFF	; 255
 250:	31 e1       	ldi	r19, 0x11	; 17
 252:	8a e7       	ldi	r24, 0x7A	; 122
 254:	21 50       	subi	r18, 0x01	; 1
 256:	30 40       	sbci	r19, 0x00	; 0
 258:	80 40       	sbci	r24, 0x00	; 0
 25a:	e1 f7       	brne	.-8      	; 0x254 <__vector_13+0xa8>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <__vector_13+0xb2>
 25e:	00 00       	nop

	_delay_ms(2500);
	USART_tx_string(AT_CHECK); 													//send commands
 260:	ce 01       	movw	r24, r28
 262:	01 96       	adiw	r24, 0x01	; 1
 264:	0e 94 c0 00 	call	0x180	; 0x180 <USART_tx_string>
 268:	9f ef       	ldi	r25, 0xFF	; 255
 26a:	23 e2       	ldi	r18, 0x23	; 35
 26c:	34 ef       	ldi	r19, 0xF4	; 244
 26e:	80 e0       	ldi	r24, 0x00	; 0
 270:	91 50       	subi	r25, 0x01	; 1
 272:	20 40       	sbci	r18, 0x00	; 0
 274:	30 40       	sbci	r19, 0x00	; 0
 276:	80 40       	sbci	r24, 0x00	; 0
 278:	d9 f7       	brne	.-10     	; 0x270 <__vector_13+0xc4>
 27a:	00 c0       	rjmp	.+0      	; 0x27c <__vector_13+0xd0>
 27c:	00 00       	nop
	
	_delay_ms(6000);
	USART_tx_string(CWMODE_SET); 												//set mode
 27e:	ce 01       	movw	r24, r28
 280:	06 96       	adiw	r24, 0x06	; 6
 282:	0e 94 c0 00 	call	0x180	; 0x180 <USART_tx_string>
 286:	9f ef       	ldi	r25, 0xFF	; 255
 288:	23 e2       	ldi	r18, 0x23	; 35
 28a:	34 ef       	ldi	r19, 0xF4	; 244
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	91 50       	subi	r25, 0x01	; 1
 290:	20 40       	sbci	r18, 0x00	; 0
 292:	30 40       	sbci	r19, 0x00	; 0
 294:	80 40       	sbci	r24, 0x00	; 0
 296:	d9 f7       	brne	.-10     	; 0x28e <__vector_13+0xe2>
 298:	00 c0       	rjmp	.+0      	; 0x29a <__vector_13+0xee>
 29a:	00 00       	nop
	
	_delay_ms(6000);
	USART_tx_string(CWJAP_LOGIN); 												//connect to Wifi
 29c:	ce 01       	movw	r24, r28
 29e:	44 96       	adiw	r24, 0x14	; 20
 2a0:	0e 94 c0 00 	call	0x180	; 0x180 <USART_tx_string>
 2a4:	9a ea       	ldi	r25, 0xAA	; 170
 2a6:	2a e0       	ldi	r18, 0x0A	; 10
 2a8:	3b e8       	ldi	r19, 0x8B	; 139
 2aa:	82 e0       	ldi	r24, 0x02	; 2
 2ac:	91 50       	subi	r25, 0x01	; 1
 2ae:	20 40       	sbci	r18, 0x00	; 0
 2b0:	30 40       	sbci	r19, 0x00	; 0
 2b2:	80 40       	sbci	r24, 0x00	; 0
 2b4:	d9 f7       	brne	.-10     	; 0x2ac <__vector_13+0x100>
 2b6:	00 00       	nop
	
	_delay_ms(16000);
	USART_tx_string(CIPMUX_SET); 												//select MUX
 2b8:	ce 01       	movw	r24, r28
 2ba:	c4 96       	adiw	r24, 0x34	; 52
 2bc:	0e 94 c0 00 	call	0x180	; 0x180 <USART_tx_string>
 2c0:	9a ea       	ldi	r25, 0xAA	; 170
 2c2:	26 ee       	ldi	r18, 0xE6	; 230
 2c4:	36 e9       	ldi	r19, 0x96	; 150
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	91 50       	subi	r25, 0x01	; 1
 2ca:	20 40       	sbci	r18, 0x00	; 0
 2cc:	30 40       	sbci	r19, 0x00	; 0
 2ce:	80 40       	sbci	r24, 0x00	; 0
 2d0:	d9 f7       	brne	.-10     	; 0x2c8 <__vector_13+0x11c>
 2d2:	00 00       	nop
	
	_delay_ms(10000);
	USART_tx_string(CIPSTART_SEND);												//connect TCP
 2d4:	ce 01       	movw	r24, r28
 2d6:	8e 5b       	subi	r24, 0xBE	; 190
 2d8:	9f 4f       	sbci	r25, 0xFF	; 255
 2da:	0e 94 c0 00 	call	0x180	; 0x180 <USART_tx_string>
 2de:	9a ea       	ldi	r25, 0xAA	; 170
 2e0:	26 ee       	ldi	r18, 0xE6	; 230
 2e2:	36 e9       	ldi	r19, 0x96	; 150
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	91 50       	subi	r25, 0x01	; 1
 2e8:	20 40       	sbci	r18, 0x00	; 0
 2ea:	30 40       	sbci	r19, 0x00	; 0
 2ec:	80 40       	sbci	r24, 0x00	; 0
 2ee:	d9 f7       	brne	.-10     	; 0x2e6 <__vector_13+0x13a>
 2f0:	00 00       	nop
	
	_delay_ms(10000);
	USART_tx_string(CIPSEND_FINISH);											//send size
 2f2:	ce 01       	movw	r24, r28
 2f4:	82 59       	subi	r24, 0x92	; 146
 2f6:	9f 4f       	sbci	r25, 0xFF	; 255
 2f8:	0e 94 c0 00 	call	0x180	; 0x180 <USART_tx_string>
 2fc:	9f ef       	ldi	r25, 0xFF	; 255
 2fe:	23 e2       	ldi	r18, 0x23	; 35
 300:	34 ef       	ldi	r19, 0xF4	; 244
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	91 50       	subi	r25, 0x01	; 1
 306:	20 40       	sbci	r18, 0x00	; 0
 308:	30 40       	sbci	r19, 0x00	; 0
 30a:	80 40       	sbci	r24, 0x00	; 0
 30c:	d9 f7       	brne	.-10     	; 0x304 <__vector_13+0x158>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <__vector_13+0x164>
 310:	00 00       	nop
	
	_delay_ms(6000);
	
	read_adc(); 																//read ADC
 312:	0e 94 6a 00 	call	0xd4	; 0xd4 <read_adc>
	snprintf(outs,sizeof(outs),"GET https://api.thingspeak.com/update?api_key=XA1ZWJOD2BRUEVKD&field2=%3d\r\n", room_temp);// print it
 316:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <room_temp>
 31a:	90 91 cb 02 	lds	r25, 0x02CB	; 0x8002cb <room_temp+0x1>
 31e:	9f 93       	push	r25
 320:	8f 93       	push	r24
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	91 e0       	ldi	r25, 0x01	; 1
 326:	9f 93       	push	r25
 328:	8f 93       	push	r24
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	8f 93       	push	r24
 32e:	1f 92       	push	r1
 330:	8a ec       	ldi	r24, 0xCA	; 202
 332:	91 e0       	ldi	r25, 0x01	; 1
 334:	9f 93       	push	r25
 336:	8f 93       	push	r24
 338:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <snprintf>
	USART_tx_string(outs);														//send data
 33c:	8a ec       	ldi	r24, 0xCA	; 202
 33e:	91 e0       	ldi	r25, 0x01	; 1
 340:	0e 94 c0 00 	call	0x180	; 0x180 <USART_tx_string>
 344:	9a ea       	ldi	r25, 0xAA	; 170
 346:	26 ee       	ldi	r18, 0xE6	; 230
 348:	36 e9       	ldi	r19, 0x96	; 150
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	91 50       	subi	r25, 0x01	; 1
 34e:	20 40       	sbci	r18, 0x00	; 0
 350:	30 40       	sbci	r19, 0x00	; 0
 352:	80 40       	sbci	r24, 0x00	; 0
 354:	d9 f7       	brne	.-10     	; 0x34c <__vector_13+0x1a0>
 356:	00 00       	nop
	_delay_ms(10000);
	TCNT1 = 49911; 																//reset
 358:	87 ef       	ldi	r24, 0xF7	; 247
 35a:	92 ec       	ldi	r25, 0xC2	; 194
 35c:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 360:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 364:	0f b6       	in	r0, 0x3f	; 63
 366:	f8 94       	cli
 368:	de bf       	out	0x3e, r29	; 62
 36a:	0f be       	out	0x3f, r0	; 63
 36c:	cd bf       	out	0x3d, r28	; 61
 36e:	c2 58       	subi	r28, 0x82	; 130
 370:	df 4f       	sbci	r29, 0xFF	; 255
 372:	0f b6       	in	r0, 0x3f	; 63
 374:	f8 94       	cli
 376:	de bf       	out	0x3e, r29	; 62
 378:	0f be       	out	0x3f, r0	; 63
 37a:	cd bf       	out	0x3d, r28	; 61
 37c:	df 91       	pop	r29
 37e:	cf 91       	pop	r28
 380:	ff 91       	pop	r31
 382:	ef 91       	pop	r30
 384:	bf 91       	pop	r27
 386:	af 91       	pop	r26
 388:	9f 91       	pop	r25
 38a:	8f 91       	pop	r24
 38c:	7f 91       	pop	r23
 38e:	6f 91       	pop	r22
 390:	5f 91       	pop	r21
 392:	4f 91       	pop	r20
 394:	3f 91       	pop	r19
 396:	2f 91       	pop	r18
 398:	0f 90       	pop	r0
 39a:	0f be       	out	0x3f, r0	; 63
 39c:	0f 90       	pop	r0
 39e:	1f 90       	pop	r1
 3a0:	18 95       	reti

000003a2 <snprintf>:
 3a2:	ae e0       	ldi	r26, 0x0E	; 14
 3a4:	b0 e0       	ldi	r27, 0x00	; 0
 3a6:	e7 ed       	ldi	r30, 0xD7	; 215
 3a8:	f1 e0       	ldi	r31, 0x01	; 1
 3aa:	0c 94 a0 04 	jmp	0x940	; 0x940 <__prologue_saves__+0x1c>
 3ae:	0d 89       	ldd	r16, Y+21	; 0x15
 3b0:	1e 89       	ldd	r17, Y+22	; 0x16
 3b2:	8f 89       	ldd	r24, Y+23	; 0x17
 3b4:	98 8d       	ldd	r25, Y+24	; 0x18
 3b6:	26 e0       	ldi	r18, 0x06	; 6
 3b8:	2c 83       	std	Y+4, r18	; 0x04
 3ba:	1a 83       	std	Y+2, r17	; 0x02
 3bc:	09 83       	std	Y+1, r16	; 0x01
 3be:	97 ff       	sbrs	r25, 7
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <snprintf+0x24>
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	90 e8       	ldi	r25, 0x80	; 128
 3c6:	01 97       	sbiw	r24, 0x01	; 1
 3c8:	9e 83       	std	Y+6, r25	; 0x06
 3ca:	8d 83       	std	Y+5, r24	; 0x05
 3cc:	ae 01       	movw	r20, r28
 3ce:	45 5e       	subi	r20, 0xE5	; 229
 3d0:	5f 4f       	sbci	r21, 0xFF	; 255
 3d2:	69 8d       	ldd	r22, Y+25	; 0x19
 3d4:	7a 8d       	ldd	r23, Y+26	; 0x1a
 3d6:	ce 01       	movw	r24, r28
 3d8:	01 96       	adiw	r24, 0x01	; 1
 3da:	0e 94 01 02 	call	0x402	; 0x402 <vfprintf>
 3de:	4d 81       	ldd	r20, Y+5	; 0x05
 3e0:	5e 81       	ldd	r21, Y+6	; 0x06
 3e2:	57 fd       	sbrc	r21, 7
 3e4:	0a c0       	rjmp	.+20     	; 0x3fa <snprintf+0x58>
 3e6:	2f 81       	ldd	r18, Y+7	; 0x07
 3e8:	38 85       	ldd	r19, Y+8	; 0x08
 3ea:	42 17       	cp	r20, r18
 3ec:	53 07       	cpc	r21, r19
 3ee:	0c f4       	brge	.+2      	; 0x3f2 <snprintf+0x50>
 3f0:	9a 01       	movw	r18, r20
 3f2:	f8 01       	movw	r30, r16
 3f4:	e2 0f       	add	r30, r18
 3f6:	f3 1f       	adc	r31, r19
 3f8:	10 82       	st	Z, r1
 3fa:	2e 96       	adiw	r28, 0x0e	; 14
 3fc:	e4 e0       	ldi	r30, 0x04	; 4
 3fe:	0c 94 bc 04 	jmp	0x978	; 0x978 <__epilogue_restores__+0x1c>

00000402 <vfprintf>:
 402:	ab e0       	ldi	r26, 0x0B	; 11
 404:	b0 e0       	ldi	r27, 0x00	; 0
 406:	e7 e0       	ldi	r30, 0x07	; 7
 408:	f2 e0       	ldi	r31, 0x02	; 2
 40a:	0c 94 92 04 	jmp	0x924	; 0x924 <__prologue_saves__>
 40e:	6c 01       	movw	r12, r24
 410:	7b 01       	movw	r14, r22
 412:	8a 01       	movw	r16, r20
 414:	fc 01       	movw	r30, r24
 416:	17 82       	std	Z+7, r1	; 0x07
 418:	16 82       	std	Z+6, r1	; 0x06
 41a:	83 81       	ldd	r24, Z+3	; 0x03
 41c:	81 ff       	sbrs	r24, 1
 41e:	cc c1       	rjmp	.+920    	; 0x7b8 <vfprintf+0x3b6>
 420:	ce 01       	movw	r24, r28
 422:	01 96       	adiw	r24, 0x01	; 1
 424:	3c 01       	movw	r6, r24
 426:	f6 01       	movw	r30, r12
 428:	93 81       	ldd	r25, Z+3	; 0x03
 42a:	f7 01       	movw	r30, r14
 42c:	93 fd       	sbrc	r25, 3
 42e:	85 91       	lpm	r24, Z+
 430:	93 ff       	sbrs	r25, 3
 432:	81 91       	ld	r24, Z+
 434:	7f 01       	movw	r14, r30
 436:	88 23       	and	r24, r24
 438:	09 f4       	brne	.+2      	; 0x43c <vfprintf+0x3a>
 43a:	ba c1       	rjmp	.+884    	; 0x7b0 <vfprintf+0x3ae>
 43c:	85 32       	cpi	r24, 0x25	; 37
 43e:	39 f4       	brne	.+14     	; 0x44e <vfprintf+0x4c>
 440:	93 fd       	sbrc	r25, 3
 442:	85 91       	lpm	r24, Z+
 444:	93 ff       	sbrs	r25, 3
 446:	81 91       	ld	r24, Z+
 448:	7f 01       	movw	r14, r30
 44a:	85 32       	cpi	r24, 0x25	; 37
 44c:	29 f4       	brne	.+10     	; 0x458 <vfprintf+0x56>
 44e:	b6 01       	movw	r22, r12
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <fputc>
 456:	e7 cf       	rjmp	.-50     	; 0x426 <vfprintf+0x24>
 458:	91 2c       	mov	r9, r1
 45a:	21 2c       	mov	r2, r1
 45c:	31 2c       	mov	r3, r1
 45e:	ff e1       	ldi	r31, 0x1F	; 31
 460:	f3 15       	cp	r31, r3
 462:	d8 f0       	brcs	.+54     	; 0x49a <vfprintf+0x98>
 464:	8b 32       	cpi	r24, 0x2B	; 43
 466:	79 f0       	breq	.+30     	; 0x486 <vfprintf+0x84>
 468:	38 f4       	brcc	.+14     	; 0x478 <vfprintf+0x76>
 46a:	80 32       	cpi	r24, 0x20	; 32
 46c:	79 f0       	breq	.+30     	; 0x48c <vfprintf+0x8a>
 46e:	83 32       	cpi	r24, 0x23	; 35
 470:	a1 f4       	brne	.+40     	; 0x49a <vfprintf+0x98>
 472:	23 2d       	mov	r18, r3
 474:	20 61       	ori	r18, 0x10	; 16
 476:	1d c0       	rjmp	.+58     	; 0x4b2 <vfprintf+0xb0>
 478:	8d 32       	cpi	r24, 0x2D	; 45
 47a:	61 f0       	breq	.+24     	; 0x494 <vfprintf+0x92>
 47c:	80 33       	cpi	r24, 0x30	; 48
 47e:	69 f4       	brne	.+26     	; 0x49a <vfprintf+0x98>
 480:	23 2d       	mov	r18, r3
 482:	21 60       	ori	r18, 0x01	; 1
 484:	16 c0       	rjmp	.+44     	; 0x4b2 <vfprintf+0xb0>
 486:	83 2d       	mov	r24, r3
 488:	82 60       	ori	r24, 0x02	; 2
 48a:	38 2e       	mov	r3, r24
 48c:	e3 2d       	mov	r30, r3
 48e:	e4 60       	ori	r30, 0x04	; 4
 490:	3e 2e       	mov	r3, r30
 492:	2a c0       	rjmp	.+84     	; 0x4e8 <vfprintf+0xe6>
 494:	f3 2d       	mov	r31, r3
 496:	f8 60       	ori	r31, 0x08	; 8
 498:	1d c0       	rjmp	.+58     	; 0x4d4 <vfprintf+0xd2>
 49a:	37 fc       	sbrc	r3, 7
 49c:	2d c0       	rjmp	.+90     	; 0x4f8 <vfprintf+0xf6>
 49e:	20 ed       	ldi	r18, 0xD0	; 208
 4a0:	28 0f       	add	r18, r24
 4a2:	2a 30       	cpi	r18, 0x0A	; 10
 4a4:	40 f0       	brcs	.+16     	; 0x4b6 <vfprintf+0xb4>
 4a6:	8e 32       	cpi	r24, 0x2E	; 46
 4a8:	b9 f4       	brne	.+46     	; 0x4d8 <vfprintf+0xd6>
 4aa:	36 fc       	sbrc	r3, 6
 4ac:	81 c1       	rjmp	.+770    	; 0x7b0 <vfprintf+0x3ae>
 4ae:	23 2d       	mov	r18, r3
 4b0:	20 64       	ori	r18, 0x40	; 64
 4b2:	32 2e       	mov	r3, r18
 4b4:	19 c0       	rjmp	.+50     	; 0x4e8 <vfprintf+0xe6>
 4b6:	36 fe       	sbrs	r3, 6
 4b8:	06 c0       	rjmp	.+12     	; 0x4c6 <vfprintf+0xc4>
 4ba:	8a e0       	ldi	r24, 0x0A	; 10
 4bc:	98 9e       	mul	r9, r24
 4be:	20 0d       	add	r18, r0
 4c0:	11 24       	eor	r1, r1
 4c2:	92 2e       	mov	r9, r18
 4c4:	11 c0       	rjmp	.+34     	; 0x4e8 <vfprintf+0xe6>
 4c6:	ea e0       	ldi	r30, 0x0A	; 10
 4c8:	2e 9e       	mul	r2, r30
 4ca:	20 0d       	add	r18, r0
 4cc:	11 24       	eor	r1, r1
 4ce:	22 2e       	mov	r2, r18
 4d0:	f3 2d       	mov	r31, r3
 4d2:	f0 62       	ori	r31, 0x20	; 32
 4d4:	3f 2e       	mov	r3, r31
 4d6:	08 c0       	rjmp	.+16     	; 0x4e8 <vfprintf+0xe6>
 4d8:	8c 36       	cpi	r24, 0x6C	; 108
 4da:	21 f4       	brne	.+8      	; 0x4e4 <vfprintf+0xe2>
 4dc:	83 2d       	mov	r24, r3
 4de:	80 68       	ori	r24, 0x80	; 128
 4e0:	38 2e       	mov	r3, r24
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <vfprintf+0xe6>
 4e4:	88 36       	cpi	r24, 0x68	; 104
 4e6:	41 f4       	brne	.+16     	; 0x4f8 <vfprintf+0xf6>
 4e8:	f7 01       	movw	r30, r14
 4ea:	93 fd       	sbrc	r25, 3
 4ec:	85 91       	lpm	r24, Z+
 4ee:	93 ff       	sbrs	r25, 3
 4f0:	81 91       	ld	r24, Z+
 4f2:	7f 01       	movw	r14, r30
 4f4:	81 11       	cpse	r24, r1
 4f6:	b3 cf       	rjmp	.-154    	; 0x45e <vfprintf+0x5c>
 4f8:	98 2f       	mov	r25, r24
 4fa:	9f 7d       	andi	r25, 0xDF	; 223
 4fc:	95 54       	subi	r25, 0x45	; 69
 4fe:	93 30       	cpi	r25, 0x03	; 3
 500:	28 f4       	brcc	.+10     	; 0x50c <vfprintf+0x10a>
 502:	0c 5f       	subi	r16, 0xFC	; 252
 504:	1f 4f       	sbci	r17, 0xFF	; 255
 506:	9f e3       	ldi	r25, 0x3F	; 63
 508:	99 83       	std	Y+1, r25	; 0x01
 50a:	0d c0       	rjmp	.+26     	; 0x526 <vfprintf+0x124>
 50c:	83 36       	cpi	r24, 0x63	; 99
 50e:	31 f0       	breq	.+12     	; 0x51c <vfprintf+0x11a>
 510:	83 37       	cpi	r24, 0x73	; 115
 512:	71 f0       	breq	.+28     	; 0x530 <vfprintf+0x12e>
 514:	83 35       	cpi	r24, 0x53	; 83
 516:	09 f0       	breq	.+2      	; 0x51a <vfprintf+0x118>
 518:	59 c0       	rjmp	.+178    	; 0x5cc <vfprintf+0x1ca>
 51a:	21 c0       	rjmp	.+66     	; 0x55e <vfprintf+0x15c>
 51c:	f8 01       	movw	r30, r16
 51e:	80 81       	ld	r24, Z
 520:	89 83       	std	Y+1, r24	; 0x01
 522:	0e 5f       	subi	r16, 0xFE	; 254
 524:	1f 4f       	sbci	r17, 0xFF	; 255
 526:	88 24       	eor	r8, r8
 528:	83 94       	inc	r8
 52a:	91 2c       	mov	r9, r1
 52c:	53 01       	movw	r10, r6
 52e:	13 c0       	rjmp	.+38     	; 0x556 <vfprintf+0x154>
 530:	28 01       	movw	r4, r16
 532:	f2 e0       	ldi	r31, 0x02	; 2
 534:	4f 0e       	add	r4, r31
 536:	51 1c       	adc	r5, r1
 538:	f8 01       	movw	r30, r16
 53a:	a0 80       	ld	r10, Z
 53c:	b1 80       	ldd	r11, Z+1	; 0x01
 53e:	36 fe       	sbrs	r3, 6
 540:	03 c0       	rjmp	.+6      	; 0x548 <vfprintf+0x146>
 542:	69 2d       	mov	r22, r9
 544:	70 e0       	ldi	r23, 0x00	; 0
 546:	02 c0       	rjmp	.+4      	; 0x54c <vfprintf+0x14a>
 548:	6f ef       	ldi	r22, 0xFF	; 255
 54a:	7f ef       	ldi	r23, 0xFF	; 255
 54c:	c5 01       	movw	r24, r10
 54e:	0e 94 ed 03 	call	0x7da	; 0x7da <strnlen>
 552:	4c 01       	movw	r8, r24
 554:	82 01       	movw	r16, r4
 556:	f3 2d       	mov	r31, r3
 558:	ff 77       	andi	r31, 0x7F	; 127
 55a:	3f 2e       	mov	r3, r31
 55c:	16 c0       	rjmp	.+44     	; 0x58a <vfprintf+0x188>
 55e:	28 01       	movw	r4, r16
 560:	22 e0       	ldi	r18, 0x02	; 2
 562:	42 0e       	add	r4, r18
 564:	51 1c       	adc	r5, r1
 566:	f8 01       	movw	r30, r16
 568:	a0 80       	ld	r10, Z
 56a:	b1 80       	ldd	r11, Z+1	; 0x01
 56c:	36 fe       	sbrs	r3, 6
 56e:	03 c0       	rjmp	.+6      	; 0x576 <vfprintf+0x174>
 570:	69 2d       	mov	r22, r9
 572:	70 e0       	ldi	r23, 0x00	; 0
 574:	02 c0       	rjmp	.+4      	; 0x57a <vfprintf+0x178>
 576:	6f ef       	ldi	r22, 0xFF	; 255
 578:	7f ef       	ldi	r23, 0xFF	; 255
 57a:	c5 01       	movw	r24, r10
 57c:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <strnlen_P>
 580:	4c 01       	movw	r8, r24
 582:	f3 2d       	mov	r31, r3
 584:	f0 68       	ori	r31, 0x80	; 128
 586:	3f 2e       	mov	r3, r31
 588:	82 01       	movw	r16, r4
 58a:	33 fc       	sbrc	r3, 3
 58c:	1b c0       	rjmp	.+54     	; 0x5c4 <vfprintf+0x1c2>
 58e:	82 2d       	mov	r24, r2
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	88 16       	cp	r8, r24
 594:	99 06       	cpc	r9, r25
 596:	b0 f4       	brcc	.+44     	; 0x5c4 <vfprintf+0x1c2>
 598:	b6 01       	movw	r22, r12
 59a:	80 e2       	ldi	r24, 0x20	; 32
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <fputc>
 5a2:	2a 94       	dec	r2
 5a4:	f4 cf       	rjmp	.-24     	; 0x58e <vfprintf+0x18c>
 5a6:	f5 01       	movw	r30, r10
 5a8:	37 fc       	sbrc	r3, 7
 5aa:	85 91       	lpm	r24, Z+
 5ac:	37 fe       	sbrs	r3, 7
 5ae:	81 91       	ld	r24, Z+
 5b0:	5f 01       	movw	r10, r30
 5b2:	b6 01       	movw	r22, r12
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <fputc>
 5ba:	21 10       	cpse	r2, r1
 5bc:	2a 94       	dec	r2
 5be:	21 e0       	ldi	r18, 0x01	; 1
 5c0:	82 1a       	sub	r8, r18
 5c2:	91 08       	sbc	r9, r1
 5c4:	81 14       	cp	r8, r1
 5c6:	91 04       	cpc	r9, r1
 5c8:	71 f7       	brne	.-36     	; 0x5a6 <vfprintf+0x1a4>
 5ca:	e8 c0       	rjmp	.+464    	; 0x79c <vfprintf+0x39a>
 5cc:	84 36       	cpi	r24, 0x64	; 100
 5ce:	11 f0       	breq	.+4      	; 0x5d4 <vfprintf+0x1d2>
 5d0:	89 36       	cpi	r24, 0x69	; 105
 5d2:	41 f5       	brne	.+80     	; 0x624 <vfprintf+0x222>
 5d4:	f8 01       	movw	r30, r16
 5d6:	37 fe       	sbrs	r3, 7
 5d8:	07 c0       	rjmp	.+14     	; 0x5e8 <vfprintf+0x1e6>
 5da:	60 81       	ld	r22, Z
 5dc:	71 81       	ldd	r23, Z+1	; 0x01
 5de:	82 81       	ldd	r24, Z+2	; 0x02
 5e0:	93 81       	ldd	r25, Z+3	; 0x03
 5e2:	0c 5f       	subi	r16, 0xFC	; 252
 5e4:	1f 4f       	sbci	r17, 0xFF	; 255
 5e6:	08 c0       	rjmp	.+16     	; 0x5f8 <vfprintf+0x1f6>
 5e8:	60 81       	ld	r22, Z
 5ea:	71 81       	ldd	r23, Z+1	; 0x01
 5ec:	07 2e       	mov	r0, r23
 5ee:	00 0c       	add	r0, r0
 5f0:	88 0b       	sbc	r24, r24
 5f2:	99 0b       	sbc	r25, r25
 5f4:	0e 5f       	subi	r16, 0xFE	; 254
 5f6:	1f 4f       	sbci	r17, 0xFF	; 255
 5f8:	f3 2d       	mov	r31, r3
 5fa:	ff 76       	andi	r31, 0x6F	; 111
 5fc:	3f 2e       	mov	r3, r31
 5fe:	97 ff       	sbrs	r25, 7
 600:	09 c0       	rjmp	.+18     	; 0x614 <vfprintf+0x212>
 602:	90 95       	com	r25
 604:	80 95       	com	r24
 606:	70 95       	com	r23
 608:	61 95       	neg	r22
 60a:	7f 4f       	sbci	r23, 0xFF	; 255
 60c:	8f 4f       	sbci	r24, 0xFF	; 255
 60e:	9f 4f       	sbci	r25, 0xFF	; 255
 610:	f0 68       	ori	r31, 0x80	; 128
 612:	3f 2e       	mov	r3, r31
 614:	2a e0       	ldi	r18, 0x0A	; 10
 616:	30 e0       	ldi	r19, 0x00	; 0
 618:	a3 01       	movw	r20, r6
 61a:	0e 94 34 04 	call	0x868	; 0x868 <__ultoa_invert>
 61e:	88 2e       	mov	r8, r24
 620:	86 18       	sub	r8, r6
 622:	45 c0       	rjmp	.+138    	; 0x6ae <vfprintf+0x2ac>
 624:	85 37       	cpi	r24, 0x75	; 117
 626:	31 f4       	brne	.+12     	; 0x634 <vfprintf+0x232>
 628:	23 2d       	mov	r18, r3
 62a:	2f 7e       	andi	r18, 0xEF	; 239
 62c:	b2 2e       	mov	r11, r18
 62e:	2a e0       	ldi	r18, 0x0A	; 10
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	25 c0       	rjmp	.+74     	; 0x67e <vfprintf+0x27c>
 634:	93 2d       	mov	r25, r3
 636:	99 7f       	andi	r25, 0xF9	; 249
 638:	b9 2e       	mov	r11, r25
 63a:	8f 36       	cpi	r24, 0x6F	; 111
 63c:	c1 f0       	breq	.+48     	; 0x66e <vfprintf+0x26c>
 63e:	18 f4       	brcc	.+6      	; 0x646 <vfprintf+0x244>
 640:	88 35       	cpi	r24, 0x58	; 88
 642:	79 f0       	breq	.+30     	; 0x662 <vfprintf+0x260>
 644:	b5 c0       	rjmp	.+362    	; 0x7b0 <vfprintf+0x3ae>
 646:	80 37       	cpi	r24, 0x70	; 112
 648:	19 f0       	breq	.+6      	; 0x650 <vfprintf+0x24e>
 64a:	88 37       	cpi	r24, 0x78	; 120
 64c:	21 f0       	breq	.+8      	; 0x656 <vfprintf+0x254>
 64e:	b0 c0       	rjmp	.+352    	; 0x7b0 <vfprintf+0x3ae>
 650:	e9 2f       	mov	r30, r25
 652:	e0 61       	ori	r30, 0x10	; 16
 654:	be 2e       	mov	r11, r30
 656:	b4 fe       	sbrs	r11, 4
 658:	0d c0       	rjmp	.+26     	; 0x674 <vfprintf+0x272>
 65a:	fb 2d       	mov	r31, r11
 65c:	f4 60       	ori	r31, 0x04	; 4
 65e:	bf 2e       	mov	r11, r31
 660:	09 c0       	rjmp	.+18     	; 0x674 <vfprintf+0x272>
 662:	34 fe       	sbrs	r3, 4
 664:	0a c0       	rjmp	.+20     	; 0x67a <vfprintf+0x278>
 666:	29 2f       	mov	r18, r25
 668:	26 60       	ori	r18, 0x06	; 6
 66a:	b2 2e       	mov	r11, r18
 66c:	06 c0       	rjmp	.+12     	; 0x67a <vfprintf+0x278>
 66e:	28 e0       	ldi	r18, 0x08	; 8
 670:	30 e0       	ldi	r19, 0x00	; 0
 672:	05 c0       	rjmp	.+10     	; 0x67e <vfprintf+0x27c>
 674:	20 e1       	ldi	r18, 0x10	; 16
 676:	30 e0       	ldi	r19, 0x00	; 0
 678:	02 c0       	rjmp	.+4      	; 0x67e <vfprintf+0x27c>
 67a:	20 e1       	ldi	r18, 0x10	; 16
 67c:	32 e0       	ldi	r19, 0x02	; 2
 67e:	f8 01       	movw	r30, r16
 680:	b7 fe       	sbrs	r11, 7
 682:	07 c0       	rjmp	.+14     	; 0x692 <vfprintf+0x290>
 684:	60 81       	ld	r22, Z
 686:	71 81       	ldd	r23, Z+1	; 0x01
 688:	82 81       	ldd	r24, Z+2	; 0x02
 68a:	93 81       	ldd	r25, Z+3	; 0x03
 68c:	0c 5f       	subi	r16, 0xFC	; 252
 68e:	1f 4f       	sbci	r17, 0xFF	; 255
 690:	06 c0       	rjmp	.+12     	; 0x69e <vfprintf+0x29c>
 692:	60 81       	ld	r22, Z
 694:	71 81       	ldd	r23, Z+1	; 0x01
 696:	80 e0       	ldi	r24, 0x00	; 0
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	0e 5f       	subi	r16, 0xFE	; 254
 69c:	1f 4f       	sbci	r17, 0xFF	; 255
 69e:	a3 01       	movw	r20, r6
 6a0:	0e 94 34 04 	call	0x868	; 0x868 <__ultoa_invert>
 6a4:	88 2e       	mov	r8, r24
 6a6:	86 18       	sub	r8, r6
 6a8:	fb 2d       	mov	r31, r11
 6aa:	ff 77       	andi	r31, 0x7F	; 127
 6ac:	3f 2e       	mov	r3, r31
 6ae:	36 fe       	sbrs	r3, 6
 6b0:	0d c0       	rjmp	.+26     	; 0x6cc <vfprintf+0x2ca>
 6b2:	23 2d       	mov	r18, r3
 6b4:	2e 7f       	andi	r18, 0xFE	; 254
 6b6:	a2 2e       	mov	r10, r18
 6b8:	89 14       	cp	r8, r9
 6ba:	58 f4       	brcc	.+22     	; 0x6d2 <vfprintf+0x2d0>
 6bc:	34 fe       	sbrs	r3, 4
 6be:	0b c0       	rjmp	.+22     	; 0x6d6 <vfprintf+0x2d4>
 6c0:	32 fc       	sbrc	r3, 2
 6c2:	09 c0       	rjmp	.+18     	; 0x6d6 <vfprintf+0x2d4>
 6c4:	83 2d       	mov	r24, r3
 6c6:	8e 7e       	andi	r24, 0xEE	; 238
 6c8:	a8 2e       	mov	r10, r24
 6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <vfprintf+0x2d4>
 6cc:	b8 2c       	mov	r11, r8
 6ce:	a3 2c       	mov	r10, r3
 6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <vfprintf+0x2d6>
 6d2:	b8 2c       	mov	r11, r8
 6d4:	01 c0       	rjmp	.+2      	; 0x6d8 <vfprintf+0x2d6>
 6d6:	b9 2c       	mov	r11, r9
 6d8:	a4 fe       	sbrs	r10, 4
 6da:	0f c0       	rjmp	.+30     	; 0x6fa <vfprintf+0x2f8>
 6dc:	fe 01       	movw	r30, r28
 6de:	e8 0d       	add	r30, r8
 6e0:	f1 1d       	adc	r31, r1
 6e2:	80 81       	ld	r24, Z
 6e4:	80 33       	cpi	r24, 0x30	; 48
 6e6:	21 f4       	brne	.+8      	; 0x6f0 <vfprintf+0x2ee>
 6e8:	9a 2d       	mov	r25, r10
 6ea:	99 7e       	andi	r25, 0xE9	; 233
 6ec:	a9 2e       	mov	r10, r25
 6ee:	09 c0       	rjmp	.+18     	; 0x702 <vfprintf+0x300>
 6f0:	a2 fe       	sbrs	r10, 2
 6f2:	06 c0       	rjmp	.+12     	; 0x700 <vfprintf+0x2fe>
 6f4:	b3 94       	inc	r11
 6f6:	b3 94       	inc	r11
 6f8:	04 c0       	rjmp	.+8      	; 0x702 <vfprintf+0x300>
 6fa:	8a 2d       	mov	r24, r10
 6fc:	86 78       	andi	r24, 0x86	; 134
 6fe:	09 f0       	breq	.+2      	; 0x702 <vfprintf+0x300>
 700:	b3 94       	inc	r11
 702:	a3 fc       	sbrc	r10, 3
 704:	11 c0       	rjmp	.+34     	; 0x728 <vfprintf+0x326>
 706:	a0 fe       	sbrs	r10, 0
 708:	06 c0       	rjmp	.+12     	; 0x716 <vfprintf+0x314>
 70a:	b2 14       	cp	r11, r2
 70c:	88 f4       	brcc	.+34     	; 0x730 <vfprintf+0x32e>
 70e:	28 0c       	add	r2, r8
 710:	92 2c       	mov	r9, r2
 712:	9b 18       	sub	r9, r11
 714:	0e c0       	rjmp	.+28     	; 0x732 <vfprintf+0x330>
 716:	b2 14       	cp	r11, r2
 718:	60 f4       	brcc	.+24     	; 0x732 <vfprintf+0x330>
 71a:	b6 01       	movw	r22, r12
 71c:	80 e2       	ldi	r24, 0x20	; 32
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <fputc>
 724:	b3 94       	inc	r11
 726:	f7 cf       	rjmp	.-18     	; 0x716 <vfprintf+0x314>
 728:	b2 14       	cp	r11, r2
 72a:	18 f4       	brcc	.+6      	; 0x732 <vfprintf+0x330>
 72c:	2b 18       	sub	r2, r11
 72e:	02 c0       	rjmp	.+4      	; 0x734 <vfprintf+0x332>
 730:	98 2c       	mov	r9, r8
 732:	21 2c       	mov	r2, r1
 734:	a4 fe       	sbrs	r10, 4
 736:	10 c0       	rjmp	.+32     	; 0x758 <vfprintf+0x356>
 738:	b6 01       	movw	r22, r12
 73a:	80 e3       	ldi	r24, 0x30	; 48
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <fputc>
 742:	a2 fe       	sbrs	r10, 2
 744:	17 c0       	rjmp	.+46     	; 0x774 <vfprintf+0x372>
 746:	a1 fc       	sbrc	r10, 1
 748:	03 c0       	rjmp	.+6      	; 0x750 <vfprintf+0x34e>
 74a:	88 e7       	ldi	r24, 0x78	; 120
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	02 c0       	rjmp	.+4      	; 0x754 <vfprintf+0x352>
 750:	88 e5       	ldi	r24, 0x58	; 88
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	b6 01       	movw	r22, r12
 756:	0c c0       	rjmp	.+24     	; 0x770 <vfprintf+0x36e>
 758:	8a 2d       	mov	r24, r10
 75a:	86 78       	andi	r24, 0x86	; 134
 75c:	59 f0       	breq	.+22     	; 0x774 <vfprintf+0x372>
 75e:	a1 fe       	sbrs	r10, 1
 760:	02 c0       	rjmp	.+4      	; 0x766 <vfprintf+0x364>
 762:	8b e2       	ldi	r24, 0x2B	; 43
 764:	01 c0       	rjmp	.+2      	; 0x768 <vfprintf+0x366>
 766:	80 e2       	ldi	r24, 0x20	; 32
 768:	a7 fc       	sbrc	r10, 7
 76a:	8d e2       	ldi	r24, 0x2D	; 45
 76c:	b6 01       	movw	r22, r12
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <fputc>
 774:	89 14       	cp	r8, r9
 776:	38 f4       	brcc	.+14     	; 0x786 <vfprintf+0x384>
 778:	b6 01       	movw	r22, r12
 77a:	80 e3       	ldi	r24, 0x30	; 48
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <fputc>
 782:	9a 94       	dec	r9
 784:	f7 cf       	rjmp	.-18     	; 0x774 <vfprintf+0x372>
 786:	8a 94       	dec	r8
 788:	f3 01       	movw	r30, r6
 78a:	e8 0d       	add	r30, r8
 78c:	f1 1d       	adc	r31, r1
 78e:	80 81       	ld	r24, Z
 790:	b6 01       	movw	r22, r12
 792:	90 e0       	ldi	r25, 0x00	; 0
 794:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <fputc>
 798:	81 10       	cpse	r8, r1
 79a:	f5 cf       	rjmp	.-22     	; 0x786 <vfprintf+0x384>
 79c:	22 20       	and	r2, r2
 79e:	09 f4       	brne	.+2      	; 0x7a2 <vfprintf+0x3a0>
 7a0:	42 ce       	rjmp	.-892    	; 0x426 <vfprintf+0x24>
 7a2:	b6 01       	movw	r22, r12
 7a4:	80 e2       	ldi	r24, 0x20	; 32
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <fputc>
 7ac:	2a 94       	dec	r2
 7ae:	f6 cf       	rjmp	.-20     	; 0x79c <vfprintf+0x39a>
 7b0:	f6 01       	movw	r30, r12
 7b2:	86 81       	ldd	r24, Z+6	; 0x06
 7b4:	97 81       	ldd	r25, Z+7	; 0x07
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <vfprintf+0x3ba>
 7b8:	8f ef       	ldi	r24, 0xFF	; 255
 7ba:	9f ef       	ldi	r25, 0xFF	; 255
 7bc:	2b 96       	adiw	r28, 0x0b	; 11
 7be:	e2 e1       	ldi	r30, 0x12	; 18
 7c0:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__epilogue_restores__>

000007c4 <strnlen_P>:
 7c4:	fc 01       	movw	r30, r24
 7c6:	05 90       	lpm	r0, Z+
 7c8:	61 50       	subi	r22, 0x01	; 1
 7ca:	70 40       	sbci	r23, 0x00	; 0
 7cc:	01 10       	cpse	r0, r1
 7ce:	d8 f7       	brcc	.-10     	; 0x7c6 <strnlen_P+0x2>
 7d0:	80 95       	com	r24
 7d2:	90 95       	com	r25
 7d4:	8e 0f       	add	r24, r30
 7d6:	9f 1f       	adc	r25, r31
 7d8:	08 95       	ret

000007da <strnlen>:
 7da:	fc 01       	movw	r30, r24
 7dc:	61 50       	subi	r22, 0x01	; 1
 7de:	70 40       	sbci	r23, 0x00	; 0
 7e0:	01 90       	ld	r0, Z+
 7e2:	01 10       	cpse	r0, r1
 7e4:	d8 f7       	brcc	.-10     	; 0x7dc <strnlen+0x2>
 7e6:	80 95       	com	r24
 7e8:	90 95       	com	r25
 7ea:	8e 0f       	add	r24, r30
 7ec:	9f 1f       	adc	r25, r31
 7ee:	08 95       	ret

000007f0 <fputc>:
 7f0:	0f 93       	push	r16
 7f2:	1f 93       	push	r17
 7f4:	cf 93       	push	r28
 7f6:	df 93       	push	r29
 7f8:	fb 01       	movw	r30, r22
 7fa:	23 81       	ldd	r18, Z+3	; 0x03
 7fc:	21 fd       	sbrc	r18, 1
 7fe:	03 c0       	rjmp	.+6      	; 0x806 <fputc+0x16>
 800:	8f ef       	ldi	r24, 0xFF	; 255
 802:	9f ef       	ldi	r25, 0xFF	; 255
 804:	2c c0       	rjmp	.+88     	; 0x85e <fputc+0x6e>
 806:	22 ff       	sbrs	r18, 2
 808:	16 c0       	rjmp	.+44     	; 0x836 <fputc+0x46>
 80a:	46 81       	ldd	r20, Z+6	; 0x06
 80c:	57 81       	ldd	r21, Z+7	; 0x07
 80e:	24 81       	ldd	r18, Z+4	; 0x04
 810:	35 81       	ldd	r19, Z+5	; 0x05
 812:	42 17       	cp	r20, r18
 814:	53 07       	cpc	r21, r19
 816:	44 f4       	brge	.+16     	; 0x828 <fputc+0x38>
 818:	a0 81       	ld	r26, Z
 81a:	b1 81       	ldd	r27, Z+1	; 0x01
 81c:	9d 01       	movw	r18, r26
 81e:	2f 5f       	subi	r18, 0xFF	; 255
 820:	3f 4f       	sbci	r19, 0xFF	; 255
 822:	31 83       	std	Z+1, r19	; 0x01
 824:	20 83       	st	Z, r18
 826:	8c 93       	st	X, r24
 828:	26 81       	ldd	r18, Z+6	; 0x06
 82a:	37 81       	ldd	r19, Z+7	; 0x07
 82c:	2f 5f       	subi	r18, 0xFF	; 255
 82e:	3f 4f       	sbci	r19, 0xFF	; 255
 830:	37 83       	std	Z+7, r19	; 0x07
 832:	26 83       	std	Z+6, r18	; 0x06
 834:	14 c0       	rjmp	.+40     	; 0x85e <fputc+0x6e>
 836:	8b 01       	movw	r16, r22
 838:	ec 01       	movw	r28, r24
 83a:	fb 01       	movw	r30, r22
 83c:	00 84       	ldd	r0, Z+8	; 0x08
 83e:	f1 85       	ldd	r31, Z+9	; 0x09
 840:	e0 2d       	mov	r30, r0
 842:	09 95       	icall
 844:	89 2b       	or	r24, r25
 846:	e1 f6       	brne	.-72     	; 0x800 <fputc+0x10>
 848:	d8 01       	movw	r26, r16
 84a:	16 96       	adiw	r26, 0x06	; 6
 84c:	8d 91       	ld	r24, X+
 84e:	9c 91       	ld	r25, X
 850:	17 97       	sbiw	r26, 0x07	; 7
 852:	01 96       	adiw	r24, 0x01	; 1
 854:	17 96       	adiw	r26, 0x07	; 7
 856:	9c 93       	st	X, r25
 858:	8e 93       	st	-X, r24
 85a:	16 97       	sbiw	r26, 0x06	; 6
 85c:	ce 01       	movw	r24, r28
 85e:	df 91       	pop	r29
 860:	cf 91       	pop	r28
 862:	1f 91       	pop	r17
 864:	0f 91       	pop	r16
 866:	08 95       	ret

00000868 <__ultoa_invert>:
 868:	fa 01       	movw	r30, r20
 86a:	aa 27       	eor	r26, r26
 86c:	28 30       	cpi	r18, 0x08	; 8
 86e:	51 f1       	breq	.+84     	; 0x8c4 <__ultoa_invert+0x5c>
 870:	20 31       	cpi	r18, 0x10	; 16
 872:	81 f1       	breq	.+96     	; 0x8d4 <__ultoa_invert+0x6c>
 874:	e8 94       	clt
 876:	6f 93       	push	r22
 878:	6e 7f       	andi	r22, 0xFE	; 254
 87a:	6e 5f       	subi	r22, 0xFE	; 254
 87c:	7f 4f       	sbci	r23, 0xFF	; 255
 87e:	8f 4f       	sbci	r24, 0xFF	; 255
 880:	9f 4f       	sbci	r25, 0xFF	; 255
 882:	af 4f       	sbci	r26, 0xFF	; 255
 884:	b1 e0       	ldi	r27, 0x01	; 1
 886:	3e d0       	rcall	.+124    	; 0x904 <__stack+0x5>
 888:	b4 e0       	ldi	r27, 0x04	; 4
 88a:	3c d0       	rcall	.+120    	; 0x904 <__stack+0x5>
 88c:	67 0f       	add	r22, r23
 88e:	78 1f       	adc	r23, r24
 890:	89 1f       	adc	r24, r25
 892:	9a 1f       	adc	r25, r26
 894:	a1 1d       	adc	r26, r1
 896:	68 0f       	add	r22, r24
 898:	79 1f       	adc	r23, r25
 89a:	8a 1f       	adc	r24, r26
 89c:	91 1d       	adc	r25, r1
 89e:	a1 1d       	adc	r26, r1
 8a0:	6a 0f       	add	r22, r26
 8a2:	71 1d       	adc	r23, r1
 8a4:	81 1d       	adc	r24, r1
 8a6:	91 1d       	adc	r25, r1
 8a8:	a1 1d       	adc	r26, r1
 8aa:	20 d0       	rcall	.+64     	; 0x8ec <__ultoa_invert+0x84>
 8ac:	09 f4       	brne	.+2      	; 0x8b0 <__ultoa_invert+0x48>
 8ae:	68 94       	set
 8b0:	3f 91       	pop	r19
 8b2:	2a e0       	ldi	r18, 0x0A	; 10
 8b4:	26 9f       	mul	r18, r22
 8b6:	11 24       	eor	r1, r1
 8b8:	30 19       	sub	r19, r0
 8ba:	30 5d       	subi	r19, 0xD0	; 208
 8bc:	31 93       	st	Z+, r19
 8be:	de f6       	brtc	.-74     	; 0x876 <__ultoa_invert+0xe>
 8c0:	cf 01       	movw	r24, r30
 8c2:	08 95       	ret
 8c4:	46 2f       	mov	r20, r22
 8c6:	47 70       	andi	r20, 0x07	; 7
 8c8:	40 5d       	subi	r20, 0xD0	; 208
 8ca:	41 93       	st	Z+, r20
 8cc:	b3 e0       	ldi	r27, 0x03	; 3
 8ce:	0f d0       	rcall	.+30     	; 0x8ee <__ultoa_invert+0x86>
 8d0:	c9 f7       	brne	.-14     	; 0x8c4 <__ultoa_invert+0x5c>
 8d2:	f6 cf       	rjmp	.-20     	; 0x8c0 <__ultoa_invert+0x58>
 8d4:	46 2f       	mov	r20, r22
 8d6:	4f 70       	andi	r20, 0x0F	; 15
 8d8:	40 5d       	subi	r20, 0xD0	; 208
 8da:	4a 33       	cpi	r20, 0x3A	; 58
 8dc:	18 f0       	brcs	.+6      	; 0x8e4 <__ultoa_invert+0x7c>
 8de:	49 5d       	subi	r20, 0xD9	; 217
 8e0:	31 fd       	sbrc	r19, 1
 8e2:	40 52       	subi	r20, 0x20	; 32
 8e4:	41 93       	st	Z+, r20
 8e6:	02 d0       	rcall	.+4      	; 0x8ec <__ultoa_invert+0x84>
 8e8:	a9 f7       	brne	.-22     	; 0x8d4 <__ultoa_invert+0x6c>
 8ea:	ea cf       	rjmp	.-44     	; 0x8c0 <__ultoa_invert+0x58>
 8ec:	b4 e0       	ldi	r27, 0x04	; 4
 8ee:	a6 95       	lsr	r26
 8f0:	97 95       	ror	r25
 8f2:	87 95       	ror	r24
 8f4:	77 95       	ror	r23
 8f6:	67 95       	ror	r22
 8f8:	ba 95       	dec	r27
 8fa:	c9 f7       	brne	.-14     	; 0x8ee <__ultoa_invert+0x86>
 8fc:	00 97       	sbiw	r24, 0x00	; 0
 8fe:	61 05       	cpc	r22, r1
 900:	71 05       	cpc	r23, r1
 902:	08 95       	ret
 904:	9b 01       	movw	r18, r22
 906:	ac 01       	movw	r20, r24
 908:	0a 2e       	mov	r0, r26
 90a:	06 94       	lsr	r0
 90c:	57 95       	ror	r21
 90e:	47 95       	ror	r20
 910:	37 95       	ror	r19
 912:	27 95       	ror	r18
 914:	ba 95       	dec	r27
 916:	c9 f7       	brne	.-14     	; 0x90a <__stack+0xb>
 918:	62 0f       	add	r22, r18
 91a:	73 1f       	adc	r23, r19
 91c:	84 1f       	adc	r24, r20
 91e:	95 1f       	adc	r25, r21
 920:	a0 1d       	adc	r26, r0
 922:	08 95       	ret

00000924 <__prologue_saves__>:
 924:	2f 92       	push	r2
 926:	3f 92       	push	r3
 928:	4f 92       	push	r4
 92a:	5f 92       	push	r5
 92c:	6f 92       	push	r6
 92e:	7f 92       	push	r7
 930:	8f 92       	push	r8
 932:	9f 92       	push	r9
 934:	af 92       	push	r10
 936:	bf 92       	push	r11
 938:	cf 92       	push	r12
 93a:	df 92       	push	r13
 93c:	ef 92       	push	r14
 93e:	ff 92       	push	r15
 940:	0f 93       	push	r16
 942:	1f 93       	push	r17
 944:	cf 93       	push	r28
 946:	df 93       	push	r29
 948:	cd b7       	in	r28, 0x3d	; 61
 94a:	de b7       	in	r29, 0x3e	; 62
 94c:	ca 1b       	sub	r28, r26
 94e:	db 0b       	sbc	r29, r27
 950:	0f b6       	in	r0, 0x3f	; 63
 952:	f8 94       	cli
 954:	de bf       	out	0x3e, r29	; 62
 956:	0f be       	out	0x3f, r0	; 63
 958:	cd bf       	out	0x3d, r28	; 61
 95a:	09 94       	ijmp

0000095c <__epilogue_restores__>:
 95c:	2a 88       	ldd	r2, Y+18	; 0x12
 95e:	39 88       	ldd	r3, Y+17	; 0x11
 960:	48 88       	ldd	r4, Y+16	; 0x10
 962:	5f 84       	ldd	r5, Y+15	; 0x0f
 964:	6e 84       	ldd	r6, Y+14	; 0x0e
 966:	7d 84       	ldd	r7, Y+13	; 0x0d
 968:	8c 84       	ldd	r8, Y+12	; 0x0c
 96a:	9b 84       	ldd	r9, Y+11	; 0x0b
 96c:	aa 84       	ldd	r10, Y+10	; 0x0a
 96e:	b9 84       	ldd	r11, Y+9	; 0x09
 970:	c8 84       	ldd	r12, Y+8	; 0x08
 972:	df 80       	ldd	r13, Y+7	; 0x07
 974:	ee 80       	ldd	r14, Y+6	; 0x06
 976:	fd 80       	ldd	r15, Y+5	; 0x05
 978:	0c 81       	ldd	r16, Y+4	; 0x04
 97a:	1b 81       	ldd	r17, Y+3	; 0x03
 97c:	aa 81       	ldd	r26, Y+2	; 0x02
 97e:	b9 81       	ldd	r27, Y+1	; 0x01
 980:	ce 0f       	add	r28, r30
 982:	d1 1d       	adc	r29, r1
 984:	0f b6       	in	r0, 0x3f	; 63
 986:	f8 94       	cli
 988:	de bf       	out	0x3e, r29	; 62
 98a:	0f be       	out	0x3f, r0	; 63
 98c:	cd bf       	out	0x3d, r28	; 61
 98e:	ed 01       	movw	r28, r26
 990:	08 95       	ret

00000992 <_exit>:
 992:	f8 94       	cli

00000994 <__stop_program>:
 994:	ff cf       	rjmp	.-2      	; 0x994 <__stop_program>
